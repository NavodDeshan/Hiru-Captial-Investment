{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';// Import useNavigate from react-router-dom\nimport{jwtDecode}from'jwt-decode';// Import jwtDecode as a named import\nimport'./../css/Login.css';// Correct path to Login.css\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{// State for form data\nconst[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[message,setMessage]=useState('');// Use the navigate hook for redirection\nconst navigate=useNavigate();// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();setError('');setMessage('');const apiURL='http://localhost:5000/api/users/login';// Adjust this URL to your backend\ntry{const response=await axios.post(apiURL,{email,password});setMessage('Login successful');console.log('Login Response:',response.data);// Decode the token to get the user's role\nconst token=response.data.token;const decoded=jwtDecode(token);// Store the token in localStorage\nlocalStorage.setItem('token',token);localStorage.setItem('id',response.data.user._id);// Redirect based on role\nif(decoded.role==='admin'){navigate('/admin-dashboard');// Redirect to admin dashboard\n}else{navigate('/user-dashboard');// Redirect to user dashboard\n}}catch(err){setError('Invalid credentials or server error');console.error('Login error:',err.response);}};return/*#__PURE__*/_jsx(\"div\",{className:\"background\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"transparent-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:message}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login\"})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","message","setMessage","navigate","handleSubmit","e","preventDefault","apiURL","response","post","console","log","data","token","decoded","localStorage","setItem","user","_id","role","err","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["D:/hiru/Hiru-Captial-Investment/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\nimport { jwtDecode } from 'jwt-decode'; // Import jwtDecode as a named import\r\nimport './../css/Login.css'; // Correct path to Login.css\r\n\r\nconst Login = () => {\r\n  // State for form data\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Use the navigate hook for redirection\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setMessage('');\r\n\r\n    const apiURL = 'http://localhost:5000/api/users/login'; // Adjust this URL to your backend\r\n\r\n    try {\r\n      const response = await axios.post(apiURL, {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      setMessage('Login successful');\r\n      console.log('Login Response:', response.data);\r\n\r\n      // Decode the token to get the user's role\r\n      const token = response.data.token;\r\n      const decoded = jwtDecode(token);\r\n\r\n      // Store the token in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('id', response.data.user._id);\r\n     \r\n\r\n      // Redirect based on role\r\n      if (decoded.role === 'admin') {\r\n        navigate('/admin-dashboard'); // Redirect to admin dashboard\r\n      } else {\r\n        navigate('/user-dashboard'); // Redirect to user dashboard\r\n      }\r\n\r\n    } catch (err) {\r\n      setError('Invalid credentials or server error');\r\n      console.error('Login error:', err.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"login-container\">\r\n        <h2>Login</h2>\r\n        <form className=\"transparent-form\" onSubmit={handleSubmit}>\r\n          {/* Email Input */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Password Input */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && <p className=\"error\">{error}</p>}\r\n\r\n          {/* Success Message */}\r\n          {message && <p className=\"success\">{message}</p>}\r\n\r\n          {/* Submit Button */}\r\n          <button type=\"submit\" className=\"login-button\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}